https www javatpoint com multithreading java multithreading java javatpoint multithreading java javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions basics java oops concepts java string java regex exception handling java inner classes java multithreading what multithreading life cycle thread how create thread thread scheduler sleeping thread start thread twice calling run method joining thread naming thread thread priority daemon thread thread pool thread group shutdownhook performing multiple task garbage collection runtime class multithreading quiz multithreading quiz java synchronization synchronization java synchronized block static synchronization deadlock java inter thread comm interrupting thread reentrant monitor java i o java networking java awt java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev multithreading java multithreading multitasking process based multitasking thread based multitasking what thread multithreading java process executing multiple threads simultaneously thread lightweight sub process smallest unit processing multiprocessing multithreading both used achieve multitasking however we use multithreading than multiprocessing because threads use shared memory area don t allocate separate memory area so saves memory context switching between threads takes less time than process java multithreading mostly used games animation etc advantages java multithreading doesn t block user because threads independent you can perform multiple operations same time you can perform many operations together so saves time threads independent so doesn t affect other threads exception occurs single thread multitasking multitasking process executing multiple tasks simultaneously we use multitasking utilize cpu multitasking can achieved two ways process based multitasking multiprocessing thread based multitasking multithreading process based multitasking multiprocessing each process has address memory other words each process allocates separate memory area process heavyweight cost communication between process high switching from one process another requires some time saving loading registers memory maps updating lists etc thread based multitasking multithreading threads share same address space thread lightweight cost communication between thread low note least one process required each thread what thread java thread lightweight subprocess smallest unit processing separate path execution threads independent occurs exception one thread doesn t affect other threads uses shared memory area shown above figure thread executed inside process context switching between threads can multiple processes inside os one process can have multiple threads note time one thread executed only java thread class java provides thread class achieve thread programming thread class provides constructors methods create perform operations thread thread class extends object class implements runnable interface java thread methods s n modifier type method description void start used start execution thread void run used do action thread static void sleep sleeps thread specified amount time static thread currentthread returns reference currently executing thread object void join waits thread die int getpriority returns priority thread void setpriority changes priority thread string getname returns name thread void setname changes name thread long getid returns id thread boolean isalive tests thread alive static void yield causes currently executing thread object pause allow other threads execute temporarily void suspend used suspend thread void resume used resume suspended thread void stop used stop thread void destroy used destroy thread group all its subgroups boolean isdaemon tests thread daemon thread void setdaemon marks thread daemon user thread void interrupt interrupts thread boolean isinterrupted tests whether thread has been interrupted static boolean interrupted tests whether current thread has been interrupted static int activecount returns number active threads current thread s thread group void checkaccess determines currently running thread has permission modify thread static boolean holdlock returns true only current thread holds monitor lock specified object static void dumpstack used print stack trace current thread standard error stream stacktraceelement getstacktrace returns array stack trace elements representing stack dump thread static int enumerate used copy every active thread s thread group its subgroup specified array thread state getstate used return state thread threadgroup getthreadgroup used return thread group which thread belongs string tostring used return string representation thread including thread s name priority thread group void notify used give notification only one thread which waiting particular object void notifyall used give notification all waiting threads particular object void setcontextclassloader sets context classloader thread classloader getcontextclassloader returns context classloader thread static thread uncaughtexceptionhandler getdefaultuncaughtexceptionhandler returns default handler invoked when thread abruptly terminates due uncaught exception static void setdefaultuncaughtexceptionhandler sets default handler invoked when thread abruptly terminates due uncaught exception do you know how perform two tasks two threads how perform multithreading anonymous class what thread scheduler what difference between preemptive scheduling time slicing what happens we start thread twice what happens we call run method instead start method what purpose join method why jvm terminates daemon thread user threads remaining what shutdown hook what garbage collection what purpose finalize method what does gc method what synchronization why use synchronization what difference between synchronized method synchronized block what two ways perform static synchronization what deadlock when can occur what interthread communication cooperation what we learn multithreading multithreading life cycle thread two ways create thread how perform multiple tasks multiple threads thread scheduler sleeping thread can we start thread twice what happens we call run method instead start method joining thread naming thread priority thread daemon thread shutdownhook garbage collection synchronization synchronized method synchronized block static synchronization deadlock inter thread communication next topiclife cycle thread prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
