https www javatpoint com java oops concepts java oops concepts javatpoint java oops concepts javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training basics java java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev java oops concepts object oriented programming advantage oops over procedure oriented programming language difference between object oriented object based programming language page we learn about basics oops object oriented programming paradigm provides many concepts inheritance data binding polymorphism etc simula considered first object oriented programming language programming paradigm where everything represented object known truly object oriented programming language smalltalk considered first truly object oriented programming language popular object oriented languages java c php python c etc main aim object oriented programming implement real world entities example object classes abstraction inheritance polymorphism etc oops object oriented programming system object means real world entity pen chair table computer watch etc object oriented programming methodology paradigm design program using classes objects simplifies software development maintenance providing some concepts object class inheritance polymorphism abstraction encapsulation apart from concepts some other terms which used object oriented design coupling cohesion association aggregation composition object any entity has state behavior known object example chair pen table keyboard bike etc can physical logical object can defined instance class object contains address takes up some space memory objects can communicate without knowing details each other s data code only necessary thing type message accepted type response returned objects example dog object because has states like color name breed etc well behaviors like wagging tail barking eating etc class collection objects called class logical entity class can also defined blueprint from which you can create individual object class doesn t consume any space inheritance when one object acquires all properties behaviors parent object known inheritance provides code reusability used achieve runtime polymorphism polymorphism one task performed different ways known polymorphism example convince customer differently draw something example shape triangle rectangle etc java we use method overloading method overriding achieve polymorphism another example can speak something example cat speaks meow dog barks woof etc abstraction hiding internal details showing functionality known abstraction example phone call we don t know internal processing java we use abstract class interface achieve abstraction encapsulation binding wrapping code data together single unit known encapsulation example capsule wrapped different medicines java class example encapsulation java bean fully encapsulated class because all data members private here coupling coupling refers knowledge information dependency another class arises when classes aware each other class has details information another class strong coupling java we use private protected public modifiers display visibility level class method field you can use interfaces weaker coupling because concrete implementation cohesion cohesion refers level component which performs single well defined task single well defined task done highly cohesive method weakly cohesive method split task separate parts java io package highly cohesive package because has i o related classes interface however java util package weakly cohesive package because has unrelated classes interfaces association association represents relationship between objects here one object can associated one object many objects can four types association between objects one one one many many one many many let s understand relationship real time examples example one country can have one prime minister one one prime minister can have many ministers one many also many mp s can have one prime minister many one many ministers can have many departments many many association can undirectional bidirectional aggregation aggregation way achieve association aggregation represents relationship where one object contains other objects part its state represents weak relationship between objects also termed has relationship java like inheritance represents relationship another way reuse objects composition composition also way achieve association composition represents relationship where one object contains other objects part its state strong relationship between containing object dependent object state where containing objects do have independent existence you delete parent object all child objects deleted automatically advantage oops over procedure oriented programming language oops makes development maintenance easier whereas procedure oriented programming language easy manage code grows project size increases oops provides data hiding whereas procedure oriented programming language global data can accessed from anywhere figure data representation procedure oriented programming figure data representation object oriented programming oops provides ability simulate real world event much more effectively we can provide solution real word problem we using object oriented programming language what difference between object oriented programming language object based programming language object based programming language follows all features oops except inheritance javascript vbscript examples object based programming languages do you know can we overload main method java constructor returns value what can we create program without main method what six ways use keyword why multiple inheritance supported java why use aggregation can we override static method what covariant return type what three usages java super keyword why use instance initializer block what usage blank final variable what marker tagged interface what runtime polymorphism dynamic method dispatch what difference between static dynamic binding how downcasting possible java what purpose private constructor what object cloning what we learn oops concepts advantage oops naming convention object class method overloading constructor static keyword keyword six usage inheritance aggregation method overriding covariant return type super keyword instance initializer block final keyword abstract class interface runtime polymorphism static dynamic binding downcasting instanceof operator package access modifiers encapsulation object cloning next topicnaming convention java prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
