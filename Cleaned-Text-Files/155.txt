https www javatpoint com method java method java javatpoint method java javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training java tutorial what java history java features java c vs java hello java program program internal how set path jdk jre jvm jvm java virtual machine java variables java data types unicode system operators keywords control statements java control statements java else java switch java loop java while loop java do while loop java break java continue java comments java programs java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java misc java new features rmi internationalization interview questions java mcq next prev method java general method way perform some task similarly method java collection instructions performs specific task provides reusability code we can also easily modify code using methods section we learn what method java types methods method declaration how call method java what method java method block code collection statements set code grouped together perform certain task operation used achieve reusability code we write method once use many times we do require write code again again also provides easy modification readability code just adding removing chunk code method executed only when we call invoke most important method java main method you want read more about main method go through link https www javatpoint com java main method method declaration method declaration provides information about method attributes visibility return type name arguments has six components known method header we have shown following figure method signature every method has method signature part method declaration includes method name parameter list access specifier access specifier modifier access type method specifies visibility method java provides four types access specifier public method accessible all classes when we use public specifier our application private when we use private access specifier method accessible only classes which defined protected when we use protected access specifier method accessible within same package subclasses different package default when we do use any access specifier method declaration java uses default access specifier default visible only from same package only return type return type data type method returns may have primitive data type object collection void etc method does return anything we use void keyword method name unique name used define name method must corresponding functionality method suppose we creating method subtraction two numbers method name must subtraction method invoked its name parameter list list parameters separated comma enclosed pair parentheses contains data type variable name method has parameter left parentheses blank method body part method declaration contains all actions performed enclosed within pair curly braces naming method while defining method remember method name must verb start lowercase letter method name has more than two words first name must verb followed adjective noun multi word method name first letter each word must uppercase except first word example single word method name sum area multi word method name areaofcircle stringcomparision also possible method has same name another method name same class known method overloading types method two types methods java predefined method user defined method predefined method java predefined methods method already defined java class libraries known predefined methods also known standard library method built method we can directly use methods just calling them program any point some pre defined methods length equals compareto sqrt etc when we call any predefined methods our program series codes related corresponding method runs background already stored library each every predefined method defined inside class print method defined java io printstream class prints statement we write inside method example print java prints java console let s see example predefined method demo java public class demo public static void main string args using max method math class system out print maximum number math max output maximum number above example we have used three predefined methods main print max we have used methods directly without declaration because predefined print method method printstream class prints result console max method method math class returns greater two numbers we can also see method signature any predefined method using link https docs oracle com when we go through link see max method signature we find following above method signature we see method signature has access specifier public non access modifier static return type int method name max parameter list int int b above example instead defining method we have just invoked method advantage predefined method makes programming less complicated similarly we can also see method signature print method user defined method method written user programmer known user defined method methods modified according requirement how create user defined method let s create user defined method checks number even odd first we define method user defined method public static void findevenodd int num method body num system out println num even else system out println num odd we have defined above method named findevenodd has parameter num type int method does return any value s why we have used void method body contains steps check number even odd number even prints number even else prints number odd how call invoke user defined method once we have defined method should called calling method program simple when we call invoke user defined method program control transfer called method import java util scanner public class evenodd public static void main string args creating scanner class object scanner scan new scanner system system out print enter number reading value from user int num scan nextint method calling findevenodd num above code snippet soon compiler reaches line findevenodd num control transfer method gives output accordingly let s combine both snippets codes single program execute evenodd java import java util scanner public class evenodd public static void main string args creating scanner class object scanner scan new scanner system system out print enter number reading value from user int num scan nextint method calling findevenodd num user defined method public static void findevenodd int num method body num system out println num even else system out println num odd output enter number even output enter number odd let s see another program return value calling method following program we have defined method named add sum up two numbers has two parameters n n integer type values n n correspond value b respectively therefore method adds value b store variable s returns sum addition java public class addition public static void main string args int int b method calling int c add b b actual parameters system out println sum b c user defined method public static int add int n int n n n formal parameters int s s n n return s returning sum output sum b static method method has static keyword known static method other words method belongs class rather than instance class known static method we can also create static method using keyword static before method name main advantage static method we can call without creating object can access static data members also change value used create instance method invoked using class name best example static method main method example static method display java public class display public static void main string args show static void show system out println example static method output example static method instance method method class known instance method non static method defined class before calling invoking instance method necessary create object its class let s see example instance method instancemethodexample java public class instancemethodexample public static void main string args creating object class instancemethodexample obj new instancemethodexample invoking instance method system out println sum obj add int s user defined method because we have used static keyword public int add int int b s b returning sum return s output sum two types instance method accessor method mutator method accessor method method s reads instance variable s known accessor method we can easily identify because method prefixed word get also known getters returns value private field used get value private field example public int getid return id mutator method method s read instance variable s also modify values we can easily identify because method prefixed word set also known setters modifiers does return anything accepts parameter same data type depends field used set value private field example public void setroll int roll roll roll example accessor mutator method student java public class student private int roll private string name public int getroll accessor method return roll public void setroll int roll mutator method roll roll public string getname return name public void setname string name name name public void display system out println roll roll system out println student name name abstract method method does has method body known abstract method other words without implementation known abstract method always declares abstract class means class itself must abstract has abstract method create abstract method we use keyword abstract syntax abstract void method name example abstract method demo java abstract class demo abstract class abstract method declaration abstract void display public class myclass extends demo method impelmentation void display system out println abstract method public static void main string args creating object abstract class demo obj new myclass invoking abstract method obj display output abstract method factory method method returns object class which belongs all static methods factory methods example numberformat obj numberformat getnumberinstance next topicconstructors java prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
