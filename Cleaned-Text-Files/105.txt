https www javatpoint com collections java collections java javatpoint collections java javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions basics java oops concepts java string java regex exception handling java inner classes java multithreading java i o java networking java awt java swing javafx java applet java reflection java date java conversion java collections collection framework java arraylist java linkedlist arraylist vs linkedlist java list interface java hashset java linkedhashset java treeset queue priorityqueue deque arraydeque java map interface java hashmap working hashmap java linkedhashmap java treemap java hashtable hashmap vs hashtable java enumset java enummap collections class sorting collections comparable interface comparator interface comparable vs comparator properties class arraylist vs vector java vector java stack java collection interface java iterator interface java deque interface java concurrenthashmap java concurrentlinkedqueue collection quiz java jdbc java new features rmi internationalization interview questions next prev collections java java collection framework hierarchy collection framework collection interface iterator interface collection java framework provides architecture store manipulate group objects java collections can achieve all operations you perform data searching sorting insertion manipulation deletion java collection means single unit objects java collection framework provides many interfaces set list queue deque classes arraylist vector linkedlist priorityqueue hashset linkedhashset treeset what collection java collection represents single unit objects i e group what framework java provides readymade architecture represents set classes interfaces optional what collection framework collection framework represents unified architecture storing manipulating group objects has interfaces its implementations i e classes algorithm do you know what two ways iterate elements collection what difference between arraylist linkedlist classes collection framework what difference between arraylist vector classes collection framework what difference between hashset hashmap classes collection framework what difference between hashmap hashtable class what difference between iterator enumeration interface collection framework how can we sort elements object what difference between comparable comparator interfaces what does hashcode method what difference between java collection java collections hierarchy collection framework let us see hierarchy collection framework java util package contains all classes interfaces collection framework methods collection interface many methods declared collection interface follows method description public boolean add e e used insert element collection public boolean addall collection extends e c used insert specified collection elements invoking collection public boolean remove object element used delete element from collection public boolean removeall collection c used delete all elements specified collection from invoking collection default boolean removeif predicate super e filter used delete all elements collection satisfy specified predicate public boolean retainall collection c used delete all elements invoking collection except specified collection public int size returns total number elements collection public void clear removes total number elements from collection public boolean contains object element used search element public boolean containsall collection c used search specified collection collection public iterator iterator returns iterator public object toarray converts collection array public t t toarray t converts collection array here runtime type returned array specified array public boolean isempty checks collection empty default stream e parallelstream returns possibly parallel stream collection its source default stream e stream returns sequential stream collection its source default spliterator e spliterator generates spliterator over specified elements collection public boolean equals object element matches two collections public int hashcode returns hash code number collection iterator interface iterator interface provides facility iterating elements forward direction only methods iterator interface only three methods iterator interface method description public boolean hasnext returns true iterator has more elements otherwise returns false public object next returns element moves cursor pointer next element public void remove removes last elements returned iterator less used iterable interface iterable interface root interface all collection classes collection interface extends iterable interface therefore all subclasses collection interface also implement iterable interface contains only one abstract method i e iterator t iterator returns iterator over elements type t collection interface collection interface interface which implemented all classes collection framework declares methods every collection have other words we can say collection interface builds foundation which collection framework depends some methods collection interface boolean add object obj boolean addall collection c void clear etc which implemented all subclasses collection interface list interface list interface child interface collection interface inhibits list type data structure which we can store ordered collection objects can have duplicate values list interface implemented classes arraylist linkedlist vector stack instantiate list interface we must use list data type list new arraylist list data type list new linkedlist list data type list new vector list data type list new stack various methods list interface can used insert delete access elements from list classes implement list interface given below arraylist arraylist class implements list interface uses dynamic array store duplicate element different data types arraylist class maintains insertion order non synchronized elements stored arraylist class can randomly accessed consider following example import java util class testjavacollection public static void main string args arraylist string list new arraylist string creating arraylist list add ravi adding object arraylist list add vijay list add ravi list add ajay traversing list through iterator iterator itr list iterator while itr hasnext system out println itr next output ravi vijay ravi ajay linkedlist linkedlist implements collection interface uses doubly linked list internally store elements can store duplicate elements maintains insertion order synchronized linkedlist manipulation fast because shifting required consider following example import java util public class testjavacollection public static void main string args linkedlist string al new linkedlist string al add ravi al add vijay al add ravi al add ajay iterator string itr al iterator while itr hasnext system out println itr next output ravi vijay ravi ajay vector vector uses dynamic array store data elements similar arraylist however synchronized contains many methods part collection framework consider following example import java util public class testjavacollection public static void main string args vector string v new vector string v add ayush v add amit v add ashish v add garima iterator string itr v iterator while itr hasnext system out println itr next output ayush amit ashish garima stack stack subclass vector implements last first out data structure i e stack stack contains all methods vector class also provides its methods like boolean push boolean peek boolean push object o which defines its properties consider following example import java util public class testjavacollection public static void main string args stack string stack new stack string stack push ayush stack push garvit stack push amit stack push ashish stack push garima stack pop iterator string itr stack iterator while itr hasnext system out println itr next output ayush garvit amit ashish queue interface queue interface maintains first first out order can defined ordered list used hold elements which about processed various classes like priorityqueue deque arraydeque which implements queue interface queue interface can instantiated queue string q new priorityqueue queue string q new arraydeque various classes implement queue interface some them given below priorityqueue priorityqueue class implements queue interface holds elements objects which processed priorities priorityqueue doesn t allow null values stored queue consider following example import java util public class testjavacollection public static void main string args priorityqueue string queue new priorityqueue string queue add amit sharma queue add vijay raj queue add jaishankar queue add raj system out println head queue element system out println head queue peek system out println iterating queue elements iterator itr queue iterator while itr hasnext system out println itr next queue remove queue poll system out println after removing two elements iterator string itr queue iterator while itr hasnext system out println itr next output head amit sharma head amit sharma iterating queue elements amit sharma raj jaishankar vijay raj after removing two elements raj vijay raj deque interface deque interface extends queue interface deque we can remove add elements from both side deque stands double ended queue which enables us perform operations both ends deque can instantiated deque d new arraydeque arraydeque arraydeque class implements deque interface facilitates us use deque unlike queue we can add delete elements from both ends arraydeque faster than arraylist stack has capacity restrictions consider following example import java util public class testjavacollection public static void main string args creating deque adding elements deque string deque new arraydeque string deque add gautam deque add karan deque add ajay traversing elements string str deque system out println str output gautam karan ajay set interface set interface java present java util package extends collection interface represents unordered set elements which doesn t allow us store duplicate items we can store most one null value set set implemented hashset linkedhashset treeset set can instantiated set data type s new hashset data type set data type s new linkedhashset data type set data type s new treeset data type hashset hashset class implements set interface represents collection uses hash table storage hashing used store elements hashset contains unique items consider following example import java util public class testjavacollection public static void main string args creating hashset adding elements hashset string set new hashset string set add ravi set add vijay set add ravi set add ajay traversing elements iterator string itr set iterator while itr hasnext system out println itr next output vijay ravi ajay linkedhashset linkedhashset class represents linkedlist implementation set interface extends hashset class implements set interface like hashset also contains unique elements maintains insertion order permits null elements consider following example import java util public class testjavacollection public static void main string args linkedhashset string set new linkedhashset string set add ravi set add vijay set add ravi set add ajay iterator string itr set iterator while itr hasnext system out println itr next output ravi vijay ajay sortedset interface sortedset alternate set interface provides total ordering its elements elements sortedset arranged increasing ascending order sortedset provides additional methods inhibit natural ordering elements sortedset can instantiated sortedset data type set new treeset treeset java treeset class implements set interface uses tree storage like hashset treeset also contains unique elements however access retrieval time treeset quite fast elements treeset stored ascending order consider following example import java util public class testjavacollection public static void main string args creating adding elements treeset string set new treeset string set add ravi set add vijay set add ravi set add ajay traversing elements iterator string itr set iterator while itr hasnext system out println itr next output ajay ravi vijay what we going learn java collections framework arraylist class linkedlist class list interface hashset class linkedhashset class treeset class priorityqueue class map interface hashmap class linkedhashmap class treemap class hashtable class sorting comparable interface comparator interface properties class java next topicjava arraylist prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
