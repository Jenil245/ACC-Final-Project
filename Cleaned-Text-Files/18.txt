https www javatpoint com object class java object java class java javatpoint object java class java javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training basics java java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev objects classes java object java class java instance variable java method java example object class maintains records student anonymous object page we learn about java objects classes object oriented programming technique we design program using objects classes object java physical well logical entity whereas class java logical entity only what object java entity has state behavior known object e g chair bike marker pen table car etc can physical logical tangible intangible example intangible object banking system object has three characteristics state represents data value object behavior represents behavior functionality object deposit withdraw etc identity object identity typically implemented via unique id value id visible external user however used internally jvm identify each object uniquely example pen object its name reynolds color white known its state used write so writing its behavior object instance class class template blueprint from which objects created so object instance result class object definitions object real world entity object runtime entity object entity which has state behavior object instance class what class java class group objects which have common properties template blueprint from which objects created logical entity can t physical class java can contain fields methods constructors blocks nested class interface syntax declare class class class name field method instance variable java variable which created inside class outside method known instance variable instance variable doesn t get memory compile time gets memory runtime when object instance created why known instance variable method java java method like function which used expose behavior object advantage method code reusability code optimization new keyword java new keyword used allocate memory runtime all objects get memory heap memory area object class example main within class example we have created student class which has two data members id name we creating object student class new keyword printing object s value here we creating main method inside class file student java java program illustrate how define class fields defining student class class student defining fields int id field data member instance variable string name creating main method inside student class public static void main string args creating object instance student s new student creating object student printing values object system out println s id accessing member through reference variable system out println s name test now output null object class example main outside class real time development we create classes use from another class better approach than previous one let s see simple example where we having main method another class we can have multiple classes different java files single java file you define multiple classes single java source file good idea save file name class name which has main method file teststudent java java program demonstrate having main method another class creating student class class student int id string name creating another class teststudent which contains main method class teststudent public static void main string args student s new student system out println s id system out println s name test now output null ways initialize object ways initialize object java reference variable method constructor object class example initialization through reference initializing object means storing data object let s see simple example where we going initialize object through reference variable file teststudent java class student int id string name class teststudent public static void main string args student s new student s id s name sonoo system out println s id s name printing members white space test now output sonoo we can also create multiple objects store information through reference variable file teststudent java class student int id string name class teststudent public static void main string args creating objects student s new student student s new student initializing objects s id s name sonoo s id s name amit printing data system out println s id s name system out println s id s name test now output sonoo amit object class example initialization through method example we creating two objects student class initializing value objects invoking insertrecord method here we displaying state data objects invoking displayinformation method file teststudent java class student int rollno string name void insertrecord int r string n rollno r name n void displayinformation system out println rollno name class teststudent public static void main string args student s new student student s new student s insertrecord karan s insertrecord aryan s displayinformation s displayinformation test now output karan aryan you can see above figure object gets memory heap memory area reference variable refers object allocated heap memory area here s s both reference variables refer objects allocated memory object class example initialization through constructor we learn about constructors java later object class example employee let s see example where we maintaining records employees file testemployee java class employee int id string name float salary void insert int i string n float s id i name n salary s void display system out println id name salary public class testemployee public static void main string args employee e new employee employee e new employee employee e new employee e insert ajeet e insert irfan e insert nakul e display e display e display test now output ajeet irfan nakul object class example rectangle given another example maintains records rectangle class file testrectangle java class rectangle int length int width void insert int l int w length l width w void calculatearea system out println length width class testrectangle public static void main string args rectangle r new rectangle rectangle r new rectangle r insert r insert r calculatearea r calculatearea test now output what different ways create object java many ways create object java new keyword newinstance method clone method deserialization factory method etc we learn ways create object later anonymous object anonymous simply means nameless object which has reference known anonymous object can used time object creation only you have use object only once anonymous object good approach example new calculation anonymous object calling method through reference calculation c new calculation c fact calling method through anonymous object new calculation fact let s see full example anonymous object java class calculation void fact int n int fact int i i n i fact fact i system out println factorial fact public static void main string args new calculation fact calling method anonymous object output factorial creating multiple objects one type only we can create multiple objects one type only we do case primitives initialization primitive variables int b initialization refernce variables rectangle r new rectangle r new rectangle creating two objects let s see example java program illustrate use rectangle class which has length width data members class rectangle int length int width void insert int l int w length l width w void calculatearea system out println length width class testrectangle public static void main string args rectangle r new rectangle r new rectangle creating two objects r insert r insert r calculatearea r calculatearea test now output real world example account file testaccount java java program demonstrate working banking system where we deposit withdraw amount from our account creating account class which has deposit withdraw methods class account int acc string name float amount method initialize object void insert int string n float amt acc name n amount amt deposit method void deposit float amt amount amount amt system out println amt deposited withdraw method void withdraw float amt amount amt system out println insufficient balance else amount amount amt system out println amt withdrawn method check balance account void checkbalance system out println balance amount method display values object void display system out println acc name amount creating test class deposit withdraw amount class testaccount public static void main string args account new account insert ankit display checkbalance deposit checkbalance withdraw checkbalance test now output ankit balance deposited balance withdrawn balance next topicconstructor java prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
