https www javatpoint com inheritance java inheritance java javatpoint inheritance java javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training basics java java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev inheritance java inheritance types inheritance why multiple inheritance possible java case class inheritance java mechanism which one object acquires all properties behaviors parent object important part oops object oriented programming system idea behind inheritance java you can create new classes built upon existing classes when you inherit from existing class you can reuse methods fields parent class moreover you can add new methods fields your current class also inheritance represents relationship which also known parent child relationship why use inheritance java method overriding so runtime polymorphism can achieved code reusability terms used inheritance class class group objects which have common properties template blueprint from which objects created sub class child class subclass class which inherits other class also called derived class extended class child class super class parent class superclass class from where subclass inherits features also called base class parent class reusability name specifies reusability mechanism which facilitates you reuse fields methods existing class when you create new class you can use same fields methods already defined previous class syntax java inheritance class subclass name extends superclass name methods fields extends keyword indicates you making new class derives from existing class meaning extends increase functionality terminology java class which inherited called parent superclass new class called child subclass java inheritance example displayed above figure programmer subclass employee superclass relationship between two classes programmer employee means programmer type employee class employee float salary class programmer extends employee int bonus public static void main string args programmer p new programmer system out println programmer salary p salary system out println bonus programmer p bonus test now programmer salary bonus programmer above example programmer object can access field own class well employee class i e code reusability types inheritance java basis class can three types inheritance java single multilevel hierarchical java programming multiple hybrid inheritance supported through interface only we learn about interfaces later note multiple inheritance supported java through class when one class inherits multiple classes known multiple inheritance example single inheritance example when class inherits another class known single inheritance example given below dog class inherits animal class so single inheritance file testinheritance java class animal void eat system out println eating class dog extends animal void bark system out println barking class testinheritance public static void main string args dog d new dog d bark d eat output barking eating multilevel inheritance example when chain inheritance known multilevel inheritance you can see example given below babydog class inherits dog class which again inherits animal class so multilevel inheritance file testinheritance java class animal void eat system out println eating class dog extends animal void bark system out println barking class babydog extends dog void weep system out println weeping class testinheritance public static void main string args babydog d new babydog d weep d bark d eat output weeping barking eating hierarchical inheritance example when two more classes inherits single class known hierarchical inheritance example given below dog cat classes inherits animal class so hierarchical inheritance file testinheritance java class animal void eat system out println eating class dog extends animal void bark system out println barking class cat extends animal void meow system out println meowing class testinheritance public static void main string args cat c new cat c meow c eat c bark c t error output meowing eating q why multiple inheritance supported java reduce complexity simplify language multiple inheritance supported java consider scenario where b c three classes c class inherits b classes b classes have same method you call from child class object ambiguity call method b class since compile time errors better than runtime errors java renders compile time error you inherit classes so whether you have same method different compile time error class void msg system out println hello class b void msg system out println welcome class c extends b suppose were public static void main string args c obj new c obj msg now which msg method would invoked test now compile time error next topicaggregation java has prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
