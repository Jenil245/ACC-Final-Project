https www javatpoint com interface java interface java javatpoint interface java javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training basics java java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev interface java interface example interface multiple inheritance interface why multiple inheritance supported interface while supported case class marker interface nested interface interface java blueprint class has static constants abstract methods interface java mechanism achieve abstraction can only abstract methods java interface method body used achieve abstraction multiple inheritance java other words you can say interfaces can have abstract methods variables cannot have method body java interface also represents relationship cannot instantiated just like abstract class since java we can have default static methods interface since java we can have private methods interface why use java interface mainly three reasons use interface given below used achieve abstraction interface we can support functionality multiple inheritance can used achieve loose coupling how declare interface interface declared using interface keyword provides total abstraction means all methods interface declared empty body all fields public static final default class implements interface must implement all methods declared interface syntax interface interface name declare constant fields declare methods abstract default java interface improvement since java interface can have default static methods which discussed later internal addition compiler java compiler adds public abstract keywords before interface method moreover adds public static final keywords before data members other words interface fields public static final default methods public abstract relationship between classes interfaces shown figure given below class extends another class interface extends another interface class implements interface java interface example example printable interface has only one method its implementation provided class interface printable void print class implements printable public void print system out println hello public static void main string args obj new obj print test now output hello java interface example drawable example drawable interface has only one method its implementation provided rectangle circle classes real scenario interface defined someone else its implementation provided different implementation providers moreover used someone else implementation part hidden user who uses interface file testinterface java interface declaration first user interface drawable void draw implementation second user class rectangle implements drawable public void draw system out println drawing rectangle class circle implements drawable public void draw system out println drawing circle using interface third user class testinterface public static void main string args drawable d new circle real scenario object provided method e g getdrawable d draw test now output drawing circle java interface example bank let s see another example java interface which provides implementation bank interface file testinterface java interface bank float rateofinterest class sbi implements bank public float rateofinterest return f class pnb implements bank public float rateofinterest return f class testinterface public static void main string args bank b new sbi system out println roi b rateofinterest test now output roi multiple inheritance java interface class implements multiple interfaces interface extends multiple interfaces known multiple inheritance interface printable void print interface showable void show class implements printable showable public void print system out println hello public void show system out println welcome public static void main string args obj new obj print obj show test now output hello welcome q multiple inheritance supported through class java possible interface why we have explained inheritance chapter multiple inheritance supported case class because ambiguity however supported case interface because ambiguity because its implementation provided implementation class example interface printable void print interface showable void print class testinterface implements printable showable public void print system out println hello public static void main string args testinterface obj new testinterface obj print test now output hello you can see above example printable showable interface have same methods its implementation provided class testtnterface so ambiguity interface inheritance class implements interface one interface extends another interface interface printable void print interface showable extends printable void show class testinterface implements showable public void print system out println hello public void show system out println welcome public static void main string args testinterface obj new testinterface obj print obj show test now output hello welcome java default method interface since java we can have method body interface we need make default method let s see example file testinterfacedefault java interface drawable void draw default void msg system out println default method class rectangle implements drawable public void draw system out println drawing rectangle class testinterfacedefault public static void main string args drawable d new rectangle d draw d msg test now output drawing rectangle default method java static method interface since java we can have static method interface let s see example file testinterfacestatic java interface drawable void draw static int cube int x return x x x class rectangle implements drawable public void draw system out println drawing rectangle class testinterfacestatic public static void main string args drawable d new rectangle d draw system out println drawable cube test now output drawing rectangle q what marker tagged interface interface which has member known marker tagged interface example serializable cloneable remote etc used provide some essential information jvm so jvm may perform some useful operation how serializable interface written public interface serializable nested interface java note interface can have another interface which known nested interface we learn detail nested classes chapter example interface printable void print interface messageprintable void msg more about nested interface next topicdifference between abstract class interface prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
