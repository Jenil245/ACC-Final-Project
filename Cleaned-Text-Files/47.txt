https www javatpoint com downcasting instanceof operator java instanceof javatpoint java instanceof javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training basics java java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev java instanceof java instanceof example instanceof operator applying instanceof operator variable have null value downcasting instanceof operator downcasting without instanceof operator java instanceof operator used test whether object instance specified type class subclass interface instanceof java also known type comparison operator because compares instance type returns either true false we apply instanceof operator any variable has null value returns false simple example java instanceof let s see simple example instance operator where tests current class class simple public static void main string args simple s new simple system out println s instanceof simple true test now output true object subclass type also type parent class example dog extends animal object dog can referred either dog animal class another example java instanceof operator class animal class dog extends animal dog inherits animal public static void main string args dog d new dog system out println d instanceof animal true test now output true instanceof java variable have null value we apply instanceof operator variable have null value returns false let s see example given below where we apply instanceof operator variable have null value class dog public static void main string args dog d null system out println d instanceof dog false test now output false downcasting java instanceof operator when subclass type refers object parent class known downcasting we perform directly compiler gives compilation error you perform typecasting classcastexception thrown runtime we use instanceof operator downcasting possible dog d new animal compilation error we perform downcasting typecasting classcastexception thrown runtime dog d dog new animal compiles successfully classcastexception thrown runtime possibility downcasting instanceof let s see example where downcasting possible instanceof operator class animal class dog extends animal static void method animal instanceof dog dog d dog downcasting system out println ok downcasting performed public static void main string args animal new dog dog method test now output ok downcasting performed downcasting without use java instanceof downcasting can also performed without use instanceof operator displayed following example class animal class dog extends animal static void method animal dog d dog downcasting system out println ok downcasting performed public static void main string args animal new dog dog method test now output ok downcasting performed let s take closer look actual object referred object dog class so we downcast fine what happen we write animal new animal dog method now classcastexception case instanceof operator understanding real use instanceof java let s see real use instanceof keyword example given below interface printable class implements printable public void system out println method class b implements printable public void b system out println b method class call void invoke printable p upcasting p instanceof p downcasting p instanceof b b b b p downcasting b b end call class class test public static void main string args printable p new b call c new call c invoke p test now output b method next topicabstract class java prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
