https www javatpoint com covariant return type java covariant return type javatpoint java covariant return type javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training basics java java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev covariant return type covariant return type specifies return type may vary same direction subclass before java possible override any method changing return type now since java possible override method changing return type subclass overrides any method whose return type non primitive changes its return type subclass type let s take simple example note you beginner java skip topic return after oops concepts simple example covariant return type filename b java class get return class b extends override b get return void message system out println welcome covariant return type public static void main string args new b get message test now output welcome covariant return type you can see above example return type get method class return type get method b class b both methods have different return type method overriding known covariant return type advantages covariant return type following advantages covariant return type covariant return type assists stay away from confusing type casts class hierarchy makes code more usable readable maintainable method overriding covariant return type provides liberty have more point return types covariant return type helps preventing run time classcastexceptions returns let s take example understand advantages covariant return type filename covariantexample java class foo return void print system out println inside class child class class extends override foo return void print system out println inside class child class class extends override foo return override void print system out println inside class public class covariantexample main method public static void main string argvs new ok foo print new we need do type casting make more clear reader about kind object created foo print new doing type casting foo print output inside class inside class inside class explanation above program class inherits class class inherits class thus parent classes hence any object classes also type return type method foo same every class we do know exact type object method actually returning we can only deduce returned object type which most generic class we can say sure returned object where we need do typecasting find out specific type object returned from method foo only makes code verbose also requires precision from programmer ensure typecasting done properly otherwise fair chances getting classcastexception exacerbate think situation where hierarchical structure goes down classes even more each class method foo has same return type enough give nightmare reader writer code better way write above filename covariantexample java class foo return void print system out println inside class child class class extends override foo return void print system out println inside class child class class extends override foo return override void print system out println inside class public class covariantexample main method public static void main string argvs new foo print new foo print new foo print output inside class inside class inside class explanation above program typecasting needed return type specific hence confusion about knowing type object getting returned from method foo also even we write code classes would confusion regarding return types methods all possible because covariant return type how covariant return types implemented java doesn t allow return type based overloading jvm always allows return type based overloading jvm uses full signature method lookup resolution full signature means includes return type addition argument types i e class can have two more methods differing only return type javac uses fact implement covariant return types output number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number number powerful number explanation every number from method ispowerfulno invoked help loop every number vector primefactors created storing its prime divisors we check whether square every number present vector primefactors divides number all square all number present vector primefactors divides number completely number powerful number otherwise next topicsuper keyword java prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
