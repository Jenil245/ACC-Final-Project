https www javatpoint com rmi remote method invocation rmi javatpoint remote method invocation rmi javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions basics java oops concepts java string java regex exception handling java inner classes java multithreading java i o java networking java awt java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi java rmi internationalization interview questions next prev rmi remote method invocation remote method invocation rmi understanding stub skeleton stub skeleton requirements distributed applications steps write rmi program rmi example rmi remote method invocation api provides mechanism create distributed application java rmi allows object invoke methods object running another jvm rmi provides remote communication between applications using two objects stub skeleton understanding stub skeleton rmi uses stub skeleton object communication remote object remote object object whose method can invoked from another jvm let s understand stub skeleton objects stub stub object acts gateway client side all outgoing requests routed through resides client side represents remote object when caller invokes method stub object does following tasks initiates connection remote virtual machine jvm writes transmits marshals parameters remote virtual machine jvm waits result reads unmarshals return value exception finally returns value caller skeleton skeleton object acts gateway server side object all incoming requests routed through when skeleton receives incoming request does following tasks reads parameter remote method invokes method actual remote object writes transmits marshals result caller java sdk stub protocol introduced eliminates need skeletons understanding requirements distributed applications any application performs tasks can distributed application application need locate remote method need provide communication remote objects application need load class definitions objects rmi application have all features so called distributed application java rmi example given steps write rmi program create remote interface provide implementation remote interface compile implementation class create stub skeleton objects using rmic tool start registry service rmiregistry tool create start remote application create start client application rmi example example we have followed all steps create run rmi application client application need only two files remote interface client application rmi application both client server interacts remote interface client application invokes methods proxy object rmi sends request remote jvm return value sent back proxy object client application create remote interface creating remote interface extend remote interface declare remoteexception all methods remote interface here we creating remote interface extends remote interface only one method named add declares remoteexception import java rmi public interface adder extends remote public int add int x int y throws remoteexception provide implementation remote interface now provide implementation remote interface providing implementation remote interface we need either extend unicastremoteobject class use exportobject method unicastremoteobject class case you extend unicastremoteobject class you must define constructor declares remoteexception import java rmi import java rmi server public class adderremote extends unicastremoteobject implements adder adderremote throws remoteexception super public int add int x int y return x y create stub skeleton objects using rmic tool next step create stub skeleton objects using rmi compiler rmic tool invokes rmi compiler creates stub skeleton objects rmic adderremote start registry service rmiregistry tool now start registry service using rmiregistry tool you don t specify port number uses default port number example we using port number rmiregistry create run server application now rmi services need hosted server process naming class provides methods get store remote object naming class provides methods public static java rmi remote lookup java lang string throws java rmi notboundexception java net malformedurlexception java rmi remoteexception returns reference remote object public static void bind java lang string java rmi remote throws java rmi alreadyboundexception java net malformedurlexception java rmi remoteexception binds remote object given name public static void unbind java lang string throws java rmi remoteexception java rmi notboundexception java net malformedurlexception destroys remote object which bound given name public static void rebind java lang string java rmi remote throws java rmi remoteexception java net malformedurlexception binds remote object new name public static java lang string list java lang string throws java rmi remoteexception java net malformedurlexception returns array names remote objects bound registry example we binding remote object name sonoo import java rmi import java rmi registry public class myserver public static void main string args try adder stub new adderremote naming rebind rmi localhost sonoo stub catch exception e system out println e create run client application client we getting stub object lookup method naming class invoking method object example we running server client applications same machine so we using localhost you want access remote object from another machine change localhost host name ip address where remote object located import java rmi public class myclient public static void main string args try adder stub adder naming lookup rmi localhost sonoo system out println stub add catch exception e download example rmi running rmi example compile all java files javac java create stub skeleton object rmic tool rmic adderremote start rmi registry one command prompt rmiregistry start server another command prompt java myserver start client application another command prompt java myclient output rmi example meaningful example rmi application database consider scenario two applications running different machines let s say machinea machineb machinea located united states machineb india machineb want get list all customers machinea application let s develop rmi application following steps create table first all we need create table database here we using oracle database create customer class remote interface file customer java package com javatpoint public class customer implements java io serializable private int acc private string firstname lastname email private float amount getters setters note customer class must serializable file bank java package com javatpoint import java rmi import java util interface bank extends remote public list customer getcustomers throws remoteexception create class provides implementation remote interface file bankimpl java package com javatpoint import java rmi import java rmi server import java sql import java util class bankimpl extends unicastremoteobject implements bank bankimpl throws remoteexception public list customer getcustomers list customer list new arraylist customer try class forname oracle jdbc driver oracledriver connection con drivermanager getconnection jdbc oracle thin localhost xe system oracle preparedstatement ps con preparestatement select from customer resultset rs ps executequery while rs next customer c new customer c setacc rs getint c setfirstname rs getstring c setlastname rs getstring c setemail rs getstring c setamount rs getfloat list add c con close catch exception e system out println e return list end getcustomers compile class rmic tool start registry service rmiregistry tool create run server file myserver java package com javatpoint import java rmi public class myserver public static void main string args throws exception remote r new bankimpl naming rebind rmi localhost javatpoint r create run client file myclient java package com javatpoint import java util import java rmi public class myclient public static void main string args throws exception bank b bank naming lookup rmi localhost javatpoint list customer list b getcustomers customer c list system out println c getacc c getfirstname c getlastname c getemail c getamount download example rmi database prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
