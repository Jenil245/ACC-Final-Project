https www javatpoint com programs list programs list programming examples javatpoint programs list programming examples javatpoint scroll top home programs c c c java servlet jsp ejb struts mail hibernate spring android design p quiz projects interview q comment forum training programs basic programs number programs array programs matrix programs pattern programs string programs tree programs singly linked list circular linked list doubly linked list programs list programming examples list programs programming examples c c java c python php given below basic programs number programs array programs matrix programs pattern programs string programs tree programs singly linked list programs circular linked list programs doubly linked list programs miscellaneous basic programs program calculate area rectangle input width height output area rectangle width height program calculate volume sphere input radius pie output volume pie radius radius radius program find area pentagon input s output area pentagon s program find area parallelogram input base height output area parallelogram base height program find area square input output area square program find surface area sphere input radius pie output volume pie radius radius program find volume cone input radius height pie output volume pie radius radius height program find volume cube input side output volume cube side program find volume cylinder input radius r height h output volume cylinder pie radius height program calculate cgpa percentage cgpa percentage float cgpa input cgpa grades all subjects total number subjects english hindi maths science socialstudy cgpa output cgpa percentage program convert celsius fahrenheit temperature fahrenheit celsius input celsius output temperature fahrenheit program convert days years input days output number years days program convert fahrenheit celsius temperature celsius fahrenheit input fahrenheit output temperature celsius program find area equilateral triangle input side output area equilateral triangle program find area triangle input b h output area triangle b h program find area right angle triangle input b h output area triangle b h program find perimeter rectangle input c b d output perimeter rectangle b program find simple interest simple interest p r t input p r t where p principal amount r rate per annum t time years output simple interest program find surface area cube surface area cube input b h side length breadth height output surface area cube program find surface area cuboid input l w h where l length w width h height output surface area ofcuboid l w w h h l program find surface area cylinder surface area cylinder r h input r h output surface area cylinder r h here r radius h height pie number programs program check disarium number input num output disarium number program check happy number input num output happy number number program check harshad number number said harshad number divisible sum its digit input num output harshad number program print all disarium numbers between input range output disarium numbers between program print all happy numbers between input range output list happy numbers between program print all pronic numbers between number said pronic number product two consecutive numbers examples x x input range output pronic numbers between program determine whether given number deficient number program determine whether given number abundant number program determine whether given number twisted prime number program print all abundant numbers between program print all kaprekar numbers between program print all prime numbers between program print average n numbers program print combination ncr given number program print first prime numbers program print permutation npr given number program print sum digits without using modulus program swap two numbers program swap two numbers without using third variable array programs program copy all elements one array another array input arr arr none len arr output elements original array elements new array program find frequency each element array input arr output element frequency program left rotate elements array input arr here n determine number times array should rotated n output original array array after left rotation program print duplicate elements array input arr output duplicate elements given array program print elements array input arr output elements given array program print elements array reverse order input arr output original array array reverse order program print elements array present even position input arr output elements given array present even position program print elements array present odd position input arr output elements given array present odd position program print largest element present array input arr output largest element present given array program print number elements present array input arr output number elements present given array program print smallest element present array input arr output smallest element present given array program print sum all elements array input arr sum output sum all elements array program right rotate elements array input arr here n determine number times array should rotated n output original array array after right rotation program sort elements array ascending order input arr output elements original array elements array sorted ascending order program sort elements array descending order input arr output elements original array elements array sorted descending order matrix programs program calculate addition matrices input matrix matrix b output addition two matrices program calculate subtraction matrices input matrix matrix b output subtraction two matrices program determine whether given matrix identity matrix input matrix output given matrix identity matrix program determine whether given matrix sparse matrix input matrix output given matrix sparse matrix program determine whether two matrices equal input matrix matrix b output matrices equal program display lower triangular matrix input matrix output lower triangular matrix program display upper triangular matrix input matrix output upper triangular matrix program find frequency odd even numbers given matrix input matrix output frequency odd numbers frequency even numbers program find product two matrices input matrix matrix b output product two matrices program find sum each row each column matrix input matrix output sum row sum row sum row sum column sum column sum column program find transpose given matrix input matrix output transpose given matrix string programs program count total number punctuation characters exists string input char str good morning mr james potter had your breakfast output any character string matched increment count total number punctuation characters exists string program count total number vowels consonants string input str really simple sentence output vowels e i o u consonants b c d f g h j k l m n p q r s t v w x y z program determine whether two strings anagram input two strings called anagram contain same characters however order sequence characters can different str grab str brag output both strings anagram program divide string n equal parts input str aaaabbbbcccc output equal parts given string aaaa bbbb cccc program find all permutations string input char str abc output all permutations string abc acb bac bca cba cab program find all possible subsets string input str abc output all subsets given string ab abc b bc c program find longest repeating sequence string input str acbdfghybdf output longest repeating sequence bdf program remove all white spaces from string input str remove white spaces output string after removing all white spaces removewhitespaces program replace lower case characters upper case vice versa input str great power output string after case conversion great power program replace spaces string specific character input char string once blue moon char ch output string after replacing spaces given character once blue moon program count total number characters string input string best both worlds output total number characters string program count total number words string input sentence beauty lies eyes beholder output total number words given string program determine whether given string palindrome input string kayak output given string palindrome program determine whether one string rotation another input str abcde str deabc output second string rotation first string program find maximum minimum occurring character string input string grass greener other side output minimum occurring character maximum occurring character e program find reverse string input string dream big output original string dream big reverse given string gib maerd program find duplicate characters string input string great responsibility output duplicate characters given string r e t s i program find duplicate words string input string big black bug bit big black dog his big black nose output duplicate words given string big black program find frequency characters input string picture perfect output characters corresponding frequencies p i c t u r e f program find largest smallest word string input string hardships often prepare ordinary people extraordinary destiny output smallest word largest word extraordinary program find most repeated word text file input file open data txt r data txt file content term computer derived from latin word computare which means calculate computer programmable electronic device computer accepts raw data input processes set instructions produce result output history computer begins birth abacus which believed first computer output most repeated word computer program find number words given text file input file open data txt r data txt file content term computer derived from latin word computare which means calculate computer programmable electronic device computer accepts raw data input processes set instructions produce result output history computer begins birth abacus which believed first computer output number words present given file program print smallest biggest possible palindrome word given string input string wow you own kayak output smallest palindromic word wow biggest palindromic word kayak program separate individual characters from string input string characters output individual characters from given string characters program swap two string variables without using third temp variable input str good str morning output strings before swapping good morning strings after swapping morning good pattern programs program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern b b c c c d d d d e e e e e program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern program print following pattern tree programs program calculate difference between sum odd level even level nodes binary tree input output oddlevelsum evenlevelsum difference program construct binary search tree perform deletion inorder traversal input output binary search tree after insertion binary search tree after deleting node binary search tree after deleting node binary search tree after deleting node program convert binary tree binary search tree input output inorder representation binary tree inorder representation resulting binary search tree program determine whether all leaves same level input output all leaves same level program determine whether two trees identical input output both binary trees identical program find maximum width binary tree input output maximum width binary tree program find largest element binary tree input output largest element binary tree program find maximum depth height tree input output maximum height given binary tree program find nodes which maximum distance binary tree input output nodes which maximum distance program find smallest element binary tree input output smallest element binary tree program find sum all nodes binary tree input output sum all nodes binary tree program find total number possible binary search trees n keys input output total number possible binary search trees given key program implement binary tree using linked list input output binary tree after insertion binary tree after insertion binary tree after insertion binary tree after insertion program search node binary tree input search node binary tree output element present binary tree singly linked list programs singly linked list examples input head node second node third node output program create display singly linked list input add nodes list slist addnode slist addnode slist addnode slist addnode output nodes singly linked list program create singly linked list n nodes count number nodes input add nodes list slist addnode slist addnode slist addnode slist addnode output nodes singly linked list count nodes present list program create singly linked list n nodes display reverse order input add nodes list slist addnode slist addnode slist addnode slist addnode output original list reversed list program delete new node from beginning singly linked list input add nodes list slist addnode slist addnode slist addnode slist addnode output original list updated list updated list updated list updated list list empty program delete new node from middle singly linked list input add nodes list slist addnode slist addnode slist addnode slist addnode output original list updated list updated list updated list updated list list empty program delete node from end singly linked list input add nodes list slist addnode slist addnode slist addnode slist addnode output original list updated list updated list updated list updated list list empty program determine whether singly linked list palindrome input add nodes list slist addnode slist addnode slist addnode slist addnode slist addnode output nodes singly linked list given singly linked list palindrome program find maximum minimum value node from singly linked list input add nodes list slist addnode slist addnode slist addnode slist addnode output minimum value node list maximum value node list program insert new node middle singly linked list input adds data list slist addnode slist addnode inserting node middle slist addinmid inserting node middle slist addinmid output original list updated list updated list program insert new node beginning singly linked list input adding list slist addatstart adding list slist addatstart adding list slist addatstart adding list slist addatstart output adding nodes start list adding nodes start list adding nodes start list adding nodes start list program insert new node end singly linked list input adding list slist addatend adding list slist addatend adding list slist addatend adding list slist addatend output adding nodes end list adding nodes end list adding nodes end list adding nodes end list program remove duplicate elements from singly linked list input adds data list slist addnode slist addnode slist addnode slist addnode slist addnode slist addnode slist addnode output originals list list after removing duplicates program search element singly linked list input add nodes list slist addnode slist addnode slist addnode slist addnode search node list slist searchnode search nodein list slist searchnode output element present list position element present list program sort elements singly linked list input adds data list slist addnode slist addnode slist addnode slist addnode slist addnode output original list sorted list program swap nodes singly linked list without swapping data input add nodes list slist addnode slist addnode slist addnode slist addnode slist addnode swaps node node slist swap output original list list after swapping nodes program swap last element singly linked list from first one input add nodes list slist addnode slist addnode slist addnode slist addnode output originals list list after swapping first node last circular linked list programs program create circular linked list n nodes count number nodes input adds data list cl add cl add cl add cl add cl add cl add output count nodes present circular linked list program create circular linked list n nodes display reverse order input adds data list cl add cl add cl add cl add cl add cl add output original list reversed list program create display circular linked list input adds data list cl add cl add cl add cl add output nodes circular linked list program delete new node from beginning circular linked list input adds data list cl add cl add cl add cl add output original list updated list updated list updated list updated list list empty program delete new node from end circular linked list input adds data list cl add cl add cl add cl add output original list updated list updated list updated list updated list list empty program delete new node from middle circular linked list input adds data list cl add cl add cl add cl add output original list updated list updated list updated list updated list list empty program find maximum minimum value node from circular linked list input adds data list cl add cl add cl add cl add output minimum value node list maximum value node list program insert new node beginning circular linked list input adding list cl addatstart adding list cl addatstart adding list cl addatstart adding list cl addatstart output adding nodes start list adding nodes start list adding nodes start list adding nodes start list program insert new node end circular linked list input adding list cl addatend adding list cl addatend adding list cl addatend adding list cl addatend output adding nodes end list adding nodes end list adding nodes end list adding nodes end list program insert new node middle circular linked list input adds data list cl add cl add cl add cl add inserting node middle cl addinmid inserting node middle cl addinmid output original list updated list updated list program remove duplicate elements from circular linked list input adds data list cl add cl add cl add cl add cl add cl add output originals list list after removing duplicates program search element circular linked list input adds data list cl add cl add cl add cl add search node list cl search search node list cl search output element present list position element present list program sort elements circular linked list input adds data list cl add cl add cl add cl add cl add output original list sorted list doubly linked list programs program convert given binary tree doubly linked list input add nodes binary tree bt root node bt root left node bt root right node bt root left left node bt root left right node bt root right left node bt root right right node output nodes generated doubly linked list program create doubly linked list from ternary tree input add nodes ternary tree tree root node tree root left node tree root middle node tree root right node tree root left left node tree root left middle node tree root left right node tree root middle left node tree root middle middle node tree root middle right node tree root right left node tree root right middle node tree root right right node output nodes generated doubly linked list program create doubly linked list n nodes count number nodes input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output nodes doubly linked list count nodes present list program create doubly linked list n nodes display reverse order input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output original list reversed list program create display doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output nodes doubly linked list program delete new node from beginning doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output original list updated list updated list updated list updated list updated list list empty program delete new node from end doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output original list updated list updated list updated list updated list updated list list empty program delete new node from middle doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output original list updated list updated list updated list updated list updated list list empty program find maximum minimum value node from doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output minimum value node list maximum value node list program insert new node beginning doubly linked list input adding list dlist addatstart adding list dlist addatstart adding list dlist addatstart adding list dlist addatstart adding list dlist addatstart output adding node start list adding node start list adding node start list adding node start list adding node start list program insert new node end doubly linked list input adding list dlist addatend adding list dlist addatend adding list dlist addatend adding list dlist addatend adding list dlist addatend output adding node end list adding node end list adding node end list adding node end list adding node end list program insert new node middle doubly linked list input add nodes list dlist addnode dlist addnode adding node middle dlist addinmid adding node middle dlist addinmid adding node middle dlist addinmid output original list updated list updated list updated list program remove duplicate elements from doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output originals list list after removing duplicates program rotate doubly linked list n nodes input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output original list updated list program search element doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output node present list position node present list program sort elements doubly linked list input add nodes list dlist addnode dlist addnode dlist addnode dlist addnode dlist addnode output original list sorted list miscellaneous program convert cm feet inches program convert feet cm program convert feet inches program convert inches cm program convert inches feet program convert kilometer cm pyramid programs vb program calculate volume cone write program calculate perimeter hexagon write program calculate area rhombus write program calculate surface area cone write program calculate surface area hemisphere write program find perimeter ellipse write program calculate altitude isosceles triangle write program calculate area isosceles triangle write program find volume tetrahedron write program find area icosahedron write program find volume octahedron write program find area tetrahedron write program find surface area pentagonal prism write program find area rectangular prism write program find surface area triangular prism write program find area hexagonal prism write program find volume hexagonal prism write program find volume rectangular prism program convert centimeter millimeter program convert centimeter meter program convert feet millimeter program convert meter centimeter program convert mm cm program convert millimeter feet program convert feet m program convert inches meter program convert inches mm program convert m feet inches write program calculate perimeter rhombus write program find quotient remainder program convert kilobytes bytes bits program find area perimeter semicircle program find area perimeter trapezium program find type triangle from given coordinates program convert hours minutes seconds program convert temperature degree from celsius kelvin write program find sum even numbers videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
