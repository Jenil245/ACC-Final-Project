https www javatpoint com keyword keyword java javatpoint keyword java javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training basics java java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java new features rmi internationalization interview questions next prev keyword java can lot usage java keyword java reference variable refers current object usage java keyword here given usage java keyword can used refer current class instance variable can used invoke current class method implicitly can used invoke current class constructor can passed argument method call can passed argument constructor call can used return current class instance from method suggestion you beginner java lookup only three usages keyword refer current class instance variable keyword can used refer current class instance variable ambiguity between instance variables parameters keyword resolves problem ambiguity understanding problem without keyword let s understand problem we don t use keyword example given below class student int rollno string name float fee student int rollno string name float fee rollno rollno name name fee fee void display system out println rollno name fee class testthis public static void main string args student s new student ankit f student s new student sumit f s display s display test now output null null above example parameters formal arguments instance variables same so we using keyword distinguish local variable instance variable solution above problem keyword class student int rollno string name float fee student int rollno string name float fee rollno rollno name name fee fee void display system out println rollno name fee class testthis public static void main string args student s new student ankit f student s new student sumit f s display s display test now output ankit sumit local variables formal arguments instance variables different need use keyword like following program program where keyword required class student int rollno string name float fee student int r string n float f rollno r name n fee f void display system out println rollno name fee class testthis public static void main string args student s new student ankit f student s new student sumit f s display s display test now output ankit sumit better approach use meaningful names variables so we use same name instance variables parameters real time always use keyword invoke current class method you may invoke method current class using keyword you don t use keyword compiler automatically adds keyword while invoking method let s see example class void m system out println hello m void n system out println hello n m same m m class testthis public static void main string args new n test now output hello n hello m invoke current class constructor constructor call can used invoke current class constructor used reuse constructor other words used constructor chaining calling default constructor from parameterized constructor class system out println hello int x system out println x class testthis public static void main string args new test now output hello calling parameterized constructor from default constructor class system out println hello int x system out println x class testthis public static void main string args new test now output hello real usage constructor call constructor call should used reuse constructor from constructor maintains chain between constructors i e used constructor chaining let s see example given below displays actual use keyword class student int rollno string name course float fee student int rollno string name string course rollno rollno name name course course student int rollno string name string course float fee rollno name course reusing constructor fee fee void display system out println rollno name course fee class testthis public static void main string args student s new student ankit java student s new student sumit java f s display s display test now output ankit java sumit java rule call must first statement constructor class student int rollno string name course float fee student int rollno string name string course rollno rollno name name course course student int rollno string name string course float fee fee fee rollno name course c t error void display system out println rollno name course fee class testthis public static void main string args student s new student ankit java student s new student sumit java f s display s display test now output compile time error call must first statement constructor pass argument method keyword can also passed argument method mainly used event handling let s see example class s void m s obj system out println method invoked void p m public static void main string args s s new s s p test now output method invoked application can passed argument event handling situation where we have provide reference class another one used reuse one object many methods pass argument constructor call we can pass keyword constructor also useful we have use one object multiple classes let s see example class b obj b obj obj obj void display system out println obj data using data member class class int data b b new b b display public static void main string args new test now output keyword can used return current class instance we can return keyword statement from method case return type method must class type non primitive let s see example syntax can returned statement return type method name return example keyword you return statement from method class geta return void msg system out println hello java class test public static void main string args new geta msg test now output hello java proving keyword let s prove keyword refers current class instance variable program we printing reference variable output both variables same class void m system out println prints same reference id public static void main string args obj new system out println obj prints reference id obj m test now output email protected email protected next topicinheritance java prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
