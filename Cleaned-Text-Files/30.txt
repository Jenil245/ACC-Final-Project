https www javatpoint com java mcq java mcq multiple choice questions javatpoint java mcq multiple choice questions javatpoint scroll top home java programs oops string exception multithreading collections javafx jsp spring spring boot projects interview questions java training java tutorial what java history java features java c vs java hello java program program internal how set path jdk jre jvm jvm java virtual machine java variables java data types unicode system operators keywords control statements java control statements java else java switch java loop java while loop java do while loop java break java continue java comments java programs java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritance aggregation has java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java i o java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java misc java new features rmi internationalization interview questions java mcq next prev java multiple choice questions which following option leads portability security java bytecode executed jvm applet makes java code secure portable use exception handling dynamic binding between objects show answer workspace answer bytecode executed jvm explanation output java compiler bytecode which leads security portability java code highly developed set instructions designed executed java runtime system known java virtual machine jvm java programs executed jvm makes code portable secure because jvm prevents code from generating its side effects java code portable same byte code can run any platform hence correct answer option which following java features dynamic architecture neutral use pointers object oriented show answer workspace answer c use pointers explanation java language does support pointers some major reasons listed below one major factors using pointers java security concerns due pointers most users consider c language very confusing complex reason why green team java team members has introduced pointers java java provides effective layer abstraction developers using pointers java java dynamic architecture neutral object oriented programming language hence correct answer option c what should execution order class has method static block instance block constructor shown below public class first c public void mymethod system out println method system out println instance block public void first c system out println constructor static system out println static block public static void main string args first c c new first c c first c c mymethod instance block method static block constructor method constructor instance block static block static block method instance block constructor static block instance block constructor method show answer workspace answer d static block instance block constructor method explanation order execution static block execute whenever class loaded jvm instance block execute whenever object created invoked before constructors example two objects instance block execute two times each object constructor execute after instance block also execute every time object created method always executed end hence correct answer option d what output following program public class myfirst public static void main string args myfirst obj new myfirst n static int static int n int b int c public myfirst int m system out println b c n m instance block b n static block static show answer workspace answer d explanation above code two values variable i e similarly two values variable b i e output values b respectively because execution order program execution order program static block executes first instance block constructor hence jvm consider value b concerning execution order value b use value variables c m we have assigned any value them hence correct answer option d u article referred unicode escape sequence octal escape hexadecimal line feed show answer workspace answer unicode escape sequence explanation java unicode characters can used string literals comments commands expressed unicode escape sequences unicode escape sequence made up following articles backslash ascii character u ascii one more additional u characters optional four hexadecimal digits character from f f hence correct answer option used find fix bugs java programs jvm jre jdk jdb show answer workspace answer d jdb explanation java debugger jdb jdb command line java debugger debugs java class part java platform debugger architecture jpda helps inspections debugging local remote java virtual machine jvm jvm java virtual machine enables computer run java other language kotlin groovy scala etc programs compiled java bytecode jre java runtime environment part jdk contains java class libraries java class loader java virtual machine jdk java development kit software development environment used develop java applications applets hence correct answer option d which following valid declaration char char ch utea char ca tea char cr u char cc itea show answer workspace answer char ch utea explanation char literal may contain unicode character utf we can directly use characters only our file system allows us else use unicode escape u u tee char literals always declared single quotes option b c d valid because option b make string valid char literal we should add prefix u string option c single quotes present option d i used place u hence correct answer option what return type hashcode method object class object int long void show answer workspace answer b int explanation java return type hashcode method integer returns hash code value object hence correct answer option b which following valid long literal abh l xnf l show answer workspace answer d xnf l explanation every long literal recognized java we need add l character end expression can either uppercase l lowercase l character however recommended use uppercase character instead lowercase because lowercase l character hard distinguish from uppercase i character example lowercase l x rffl uppercase l nhf l hence correct answer option d what does expression float return number infinity run time exception show answer workspace answer c infinity explanation java whenever we divide any number double float long except integer zero results infinity according ieee standard floating point arithmetic ieee we divide give positive infinity give negative infinity give nan dividing integer zero throws runtime exception i e java lang arithmeticexception hence correct answer option c evaluate following java expression x y z z y y z x show answer workspace answer d explanation above expression z means value first increment i e now evaluate statement putting values x y z evaluating expression we get shown below z y y z x hence correct answer option d what output following program public class test public static void main string args int count while count system out println count count end while end main times times times times both print only once show answer workspace answer c times times explanation above code we have declared count value count increased till because while count statement remainder equal dividing count print else print therefore all odd numbers till print all even numbers till print hence asterisk printed eight times plus printed seven times which following tool used generate api documentation html format from doc comments source code javap tool javaw command javadoc tool javah command show answer workspace answer c javadoc tool explanation javadoc tool used generate api documentation html format from java source files other words program tool reads collection source files internal form javadoc command line syntax javadoc options packagenames sourcefiles files javap tool used get information any class interface also known disassembler javaw command identical java displays window error information javah command used generate native method functions hence correct answer option c which following creates list visible items multiple selections abled new list false new list true new list true new list false show answer workspace answer b new list true explanation from above statements new list true correct answer because constructor type create list visible items along multiple selections abled we have use following constructor list class list int rows boolean multiplemode creates new list initialized display described number rows along multiple selection mode therefore statement new list true three refers number rows true enables multiple selections hence correct answer option b which following loop declaration valid int i i i int i i i int i i i int i i i i show answer workspace answer int i i i explanation first option valid declaration i declared correctly correct statement int i i i i code would execute without assigning value i variable would execute exception thrown shown below exception thread main java lang error unresolved compilation problem syntax error token invalid assignmentoperator other three statements valid execute hence correct answer option which method class class used determine name class represented class object string getclass intern getname tostring show answer workspace answer c getname explanation getname method class class returns name string entity class interface represented class object non static method available java lang package getclass method object class returns runtime class object intern tostring methods string class hence correct answer option c which process local variable has same name one instance variables serialization variable shadowing abstraction multi threading show answer workspace answer b variable shadowing explanation following reasons considering variable shadowing listed below when we define variable local scope variable name same name variable defined instance scope when subclass declares variable same name parent class variable when method overridden child class hence correct answer option b which following true about anonymous inner class has only methods objects can t created has fixed class name has class name show answer workspace answer d has class name explanation anonymous inner classes same local classes except don t have any name main use override methods classes interfaces rest three options false about anonymous inner classes can have both methods objects does have any fixed came name hence correct answer option d which package contains random class java util package java lang package java awt package java io package show answer workspace answer java util package explanation random class available java util package object random class used generate series pseudorandom numbers object class thread safe cryptographically insecure object random class provides variety methods used create random numbers type integers float long double etc hence correct answer option what do you mean nameless objects object created using new keyword object superclass created subclass object without having any name having reference object has reference show answer workspace answer d object has reference explanation nameless objects basically referred anonymous objects anonymous objects do have any names we can also say when object initialized assigned any reference variable called anonymous object example new employee we assign reference variable like employee emp new employee above code emp reference variable therefore above object anonymous assigned reference variable hence correct answer option d interface fields methods known runnable interface marker interface abstract interface charsequence interface show answer workspace answer b marker interface explanation interface methods fields known marker interface other words empty interface containing fields methods called marker interface java most commonly used marker interfaces serializable cloneable remote threadsafe interfaces marker interfaces also known tag interface used tell jvm compiler particular class has special behavior following code snippet maker interface public interface cloneable empty hence correct answer option b which following immediate subclass panel class applet class window class frame class dialog class show answer workspace answer applet class explanation according class hierarchy java swing applet class direct subclass panel class you can go through link https www javatpoint com java swing deeply understand class hierarchy diagram panel class window class child classes container class frame dialog classes subclasses window class hence correct answer option which option false about final keyword final method cannot overridden its subclasses final class cannot extended final class cannot extend other classes final method can inherited show answer workspace answer c final class cannot extend other classes explanation final reserved keyword java used make variable method class immutable important features final keyword using final keyword variable makes constant immutable we can t reassign values final variable must local variable cannot used other classes using final keyword method makes constant we can t override subclass using final class makes class constant we cannot extend final class final class can extend other classes hence correct answer option c which classes direct subclasses throwable class runtimeexception error class exception virtualmachineerror class error exception class ioexception virtualmachineerror class show answer workspace answer c error exception class explanation according class hierarchy throwable class error exception classes direct subclasses throwable class shown below runtimeexception ioexception virtualmachineerror classes subclasses exception error classes hence correct answer option c what do you mean chained exceptions java exceptions occurred virtualmachineerror exception caused other exceptions exceptions occur chains discarding debugging information none above show answer workspace answer b exception caused other exceptions explanation java exception caused other exceptions known chained exception generally first exception causes second exception helps identifying cause exception chained exceptions debugging information discarded hence correct answer option b which memory string stored when we create string using new operator stack string memory heap memory random storage space show answer workspace answer c heap memory explanation when string created using new operator always created heap memory whereas when we create string using double quotes check same value string string constant pool found returns reference else create new string string constant pool hence correct answer option c what use intern method returns existing string from memory creates new string database modifies existing string database none above show answer workspace answer returns existing string from memory explanation intern method used return existing strings from database other words intern method returns reference string example string constant pool already has string object same value intern method return reference string from pool hence correct answer option which following marker interface runnable interface remote interface readable interface result interface show answer workspace answer b remote interface explanation marker interface interface fields methods other words empty interface contains nothing known marker interface examples marker interfaces cloneable serializable threadsafe remote interface runnable readable result interface marker interface contain some methods fields hence correct answer option b which following reserved keyword java object strictfp main system show answer workspace answer b strictfp explanation above options strictfp only reserved keyword java strictfp keyword modifier restricts floating point calculations assure portability added java version objects referring those variables created using new operator java main method entry point any program system class hence correct answer option b which keyword used accessing features package package import extends export show answer workspace answer b import explanation import keyword used access classes interfaces particular package current file other words used import user defined built classes interfaces source file java so current file can easily access other packages directly using its name example import java awt import java lang object first import statement imports all classes interfaces java awt package whereas second import statement only imports object class java lang package package keyword used create new package extends keyword indicates new class derived from base parent class using inheritance export keyword java hence correct answer option b java jar stands java archive runner java application resource java application runner none above show answer workspace answer d none above explanation java archive jar package file format used combine all metadata resources single file other words file contains several components which make up self contained executable deployable jar used execute java applications deploy java applets hence correct answer option d what output following program public class test public static void main string args stringbuffer s new stringbuffer complete s setcharat i s setcharat d system out println s complete iomplede cimpletd coipletd show answer workspace answer c cimpletd explanation above code snippet we have passed string value complete set character i d index position respectively according string complete o position e position setchar method used replace original string values new one hence o e replaced characters i d respectively which results cimpletd hence correct answer option c which following false rt jar stands runtime jar optional jar file contains all compiled class files all classes available rt jar known jvm show answer workspace answer b optional jar file explanation rt jar stands runtime jar comprises all compiled core class files java runtime environment generally consists classes like java lang string java lang object java io exception etc all packages classes available rt jar known jvm rt jar mandatory jar file every core java application contains all core classes hence correct answer option b what use w regex used whitespace character used non whitespace character used word character used non word character show answer workspace answer c used word character explanation java w regex used match word character consists za z example w matches one more word character same za z regex w s s used non word character whitespace character non whitespace character respectively hence w regex used word character hence correct answer option c which given methods object class notify wait long msecs synchronized wait long msecs interrupt notifyall notify notifyall wait sleep long msecs wait notify show answer workspace answer c notify notifyall wait explanation notify notifyall wait methods object class notify method used raise single thread waiting object s monitor notifyall method similar notify method except wakes up all threads waiting object s monitor wait method used make thread wait until another thread invokes notify notifyall methods object hence correct answer option c given student class how many reference variables objects created following code student studentname studentid studentname new student student stud class new student three reference variables two objects created two reference variables two objects created one reference variable two objects created three reference variables three objects created show answer workspace answer three reference variables two objects created explanation above code three reference variables two objects studentname studentid stud class three reference variables objects those variables created using new operator i e studentname stud class studentid only reference variable declared using new operator both studentname stud class reference variables well objects hence three reference variables two objects hence correct answer option which following valid syntax synchronize hashmap map m hashmap synchronizemap hashmap map hashmap synchronizemap map m collections synchronizedmap hashmap map m collection synchronizemap hashmap show answer workspace answer c map m collections synchronizedmap hashmap explanation default hashmap class non synchronized collection class need synchronization perform thread safe operations class synchronize hashmap class explicitly we should use collections synchronizedmap hashmap method returns thread safe map object hence correct answer option c given arraylist list new arraylist what initial quantity arraylist list show answer workspace answer b explanation initial default quantity arraylist means when we create arraylist without specifying any quantity created default capacity i e hence arraylist default capacity can hold ten values hence correct answer option b which following mutable class java java lang string java lang byte java lang short java lang stringbuilder show answer workspace answer d java lang stringbuilder explanation mutable class class which changes can made after its creation we can modify internal state fields mutable class stringbuilder class mutable class can altered after created string byte short immutable classes cannot altered once created hence correct answer option d what output following program abstract class myfirstclass abstract num int int b error method defined properly constructor defined properly extra parentheses show answer workspace answer b method defined properly explanation following some rules declaring abstract method abstract methods do specify method body only have method signature abstract methods always defined inside abstract class above code myfirstclass abstract class contains abstract method named num defined properly according rules discussed above abstract method only has method signature method body hence correct answer option b what meant classes objects dependents each other tight coupling cohesion loose coupling none above show answer workspace answer tight coupling explanation tight coupling group classes objects highly dependent each other tight coupling also used some cases like when object creates some other objects going used them tight coupling correct answer used when logic one class called logic another class hence correct option given int values int i i y i system out println values i find value value i none above show answer workspace answer d none above explanation above code we have defined variable y code execute without any specific value y results exception shown below exception thread main java lang error unresolved compilation problem y cannot resolved variable so values i printed above exception thrown hence correct answer d which following code segment would execute stored procedure getpassword located database server callablestatement cs connection preparecall call getpassword cs executequery callabledstatement callable conn preparecall call getpassword callable executeupdate callablestatement cab con preparecall call getpassword cab executequery callablestatement cstate connect preparecall call getpassword cstate executequery show answer workspace answer c callablestatement cab con preparecall call getpassword cab executequery explanation java java sql callablestatement interface used call sql stored procedures database stored procedures similar functions perform some specific tasks except only available database callablestatement can return either single resultset object multiple resultset objects hence correct answer option c how many threads can executed time only one thread multiple threads only main main method thread two threads show answer workspace answer b multiple threads explanation java multiple threads can executed same time java standalone application always starts single thread known main thread associated main method operating system only one thread executed time hence correct answer option b three threads trying share single object same time which condition arise scenario time lapse critical situation race condition recursion show answer workspace answer c race condition explanation two more threads trying access common resource same time situation known race condition generally occurs during execution multi threaded application also refers programming bug issue occurs when thread scheduler swaps threads any time between process hence correct answer option c thread goes sleep releases all locks has does release any locks releases half its locks releases all its lock except one show answer workspace answer b does release any locks explanation sleep method does release any locks object specific time until interrupt occurs leads poor performance deadlock threads whereas wait method does release locks object therefore when thread goes sleep does release any locks hence correct answer option b which following modifiers can used variable so can accessed any thread part program global transient volatile default show answer workspace answer c volatile explanation java we can modify values variable help reserved keyword known volatile different way making class thread safe thread safe means methods objects class accessible multiple threads same time volatile keyword replacement synchronized block method does remove need synchronization among atomic actions global reserved keyword java transient default keywords java used accessing variable thread from any part program hence correct answer option c what result following program public static synchronized void main string args throws interruptedexception thread f new thread f start system out print f wait system out print b prints b seconds delay between them only prints exits only prints b exits printed exception thrown show answer workspace answer d printed exception thrown explanation interruptedexception thrown when thread waiting sleeping occupied output above code shown below exception thread main java lang illegalmonitorstateexception java lang object wait native method com app java b main b java above code we have created thread f when started printed after thread wait seconds now exception thrown instead printing b because wait method must used inside synchronized block try catch block unless throw exception shown above hence correct option option d character stream i o single read write operation performs two bytes read write time eight bytes read write time one byte read write time five bytes read write time show answer workspace answer two bytes read write time explanation two types i o stream one byte stream other character stream byte stream used perform input output bit equals byte unicode bytes whereas character stream used read write bit equals bytes unicode character therefore single operation character stream performs two bytes read write time hence correct answer option what default encoding outputstreamwriter utf default encoding host platform utf none above show answer workspace answer b default encoding host platform explanation outputstreamwriter class translates unicode character bytes using character encoding character encoding can either default encoding dependent system encoding explicitly defined external encoding specified use default encoding host platform hence correct answer option b next topicjava tutorial prev next videos join our youtube channel join now feedback send your feedback email protected help others please share learn latest tutorials splunk spss swagger transact sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular blockchain git machine learning devops b tech mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c java net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services mail us email protected get more information about given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail your requirement email protected duration week week like subscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint comhindi comlyricsia comquoteperson comjobandplacement com our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright www javatpoint com all rights reserved developed javatpoint
